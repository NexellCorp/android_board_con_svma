import /vendor/etc/init/hw/init.${ro.hardware}.usb.rc

# on charger
#     write /sys/devices/system/cpu/cpu2/online 0
#     write /sys/devices/system/cpu/cpu3/online 0

on init
    mount debugfs debugfs /sys/kernel/debug
    chmod 0755 /sys/kernel/debug

    mkdir /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name 0777 system system

    wait /dev/block/mmcblk0p1
    symlink /dev/block/mmcblk0p1 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/bootloader_a

    wait /dev/block/mmcblk0p2
    symlink /dev/block/mmcblk0p2 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/bootloader_b

    wait /dev/block/mmcblk0p3
    symlink /dev/block/mmcblk0p3 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/boot_a

    wait /dev/block/mmcblk0p5
    symlink /dev/block/mmcblk0p5 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/boot_b

    wait /dev/block/mmcblk0p6
    symlink /dev/block/mmcblk0p6 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/system_a

    wait /dev/block/mmcblk0p7
    symlink /dev/block/mmcblk0p7 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/system_b

    wait /dev/block/mmcblk0p8
    symlink /dev/block/mmcblk0p8 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/vendor_a

    wait /dev/block/mmcblk0p9
    symlink /dev/block/mmcblk0p9 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/vendor_b

    wait /dev/block/mmcblk0p10
    symlink /dev/block/mmcblk0p10 /dev/block/platform/c0000000.soc/c0062000.dwmmc/by-name/misc

on fs
    # Start HW service manager early
    start hwservicemanager
    mount_all /vendor/etc/fstab.${ro.hardware}
    swapon_all /vendor/etc/fstab.${ro.hardware}

on boot
    class_start main
    class_start late_start

    # for omx videobufcopy (0:Disable, 1:Enable)
    setprop videobufcopy.mode 0

on boot && property:ro.vendor.ota_update_verifier=true
    exec_start update_verifier_nonencrypted

    # ------------------------------------------------------
    # TO-DO : When devfreq and cpufreq activated in kernel,
    #         need change below parameters
    # ------------------------------------------------------
    # # from init.power.sh
    # # bring back main cores CPU 0,2
    # #write /sys/devices/system/cpu/cpu0/online 1
    # write /sys/devices/system/cpu/cpu2/online 1

    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 400000

    # # EAS: Capping the max frequency of silver core to 800MHz
    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 800000

    # write /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq 400000

    # # if EAS is present, switch to sched governor (no effect if not EAS)
    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "sched"
    # write /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor "sched"

    # # Setting b.L scheduler parameters
    # write /proc/sys/kernel/sched_migration_fixup 1
    # write /proc/sys/kernel/sched_upmigrate 95
    # write /proc/sys/kernel/sched_downmigrate 90
    # write /proc/sys/kernel/sched_freq_inc_notify 400000
    # write /proc/sys/kernel/sched_freq_dec_notify 400000
    # write /proc/sys/kernel/sched_spill_nr_run 3
    # write /proc/sys/kernel/sched_init_task_load 100

    # # Exec init.foreground.sh in background
    # start vendor.foreground_sh
    # # add a cpuset for the camera daemon
    # # we want all cores for camera
    # mkdir /dev/cpuset/camera-daemon
    # write /dev/cpuset/camera-daemon/cpus 0-3
    # write /dev/cpuset/camera-daemon/mems 0
    # chown system system /dev/cpuset/camera-daemon
    # chown system system /dev/cpuset/camera-daemon/tasks
    # chmod 0664 /dev/cpuset/camera-daemon/tasks

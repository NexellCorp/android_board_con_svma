import /vendor/etc/init/hw/init.${ro.hardware}.usb.rc

# on charger
#     write /sys/devices/system/cpu/cpu2/online 0
#     write /sys/devices/system/cpu/cpu3/online 0

on init
    mount debugfs debugfs /sys/kernel/debug
    chmod 0755 /sys/kernel/debug

on fs
    # Start HW service manager early
    start hwservicemanager
    mount_all /vendor/etc/fstab.${ro.hardware}
    swapon_all /vendor/etc/fstab.${ro.hardware}

on zygote-start
    # Create the directories used by the Wireless subsystem
    mkdir /data/vendor/wifi 0771 wifi wifi
    mkdir /data/vendor/wifi/wpa 0770 wifi wifi
    mkdir /data/vendor/wifi/wpa/sockets 0770 wifi wifi
    chown dhcp dhcp /data/misc/dhcp

on early-boot
    chown system system /sys/class/backlight/pwm-backlight/brightness
    chmod 0660 /sys/class/backlight/pwm-backlight/brightness

on boot
    class_start main
    class_start late_start

    # for omx videobufcopy (0:Disable, 1:Enable)
    setprop videobufcopy.mode 0

    # nx_vpu, sdio, wifi module
    insmod /system/lib/modules/nx_vpu.ko
    insmod /system/lib/modules/dw_mmc-nexell_sdio_1.ko
    insmod /system/lib/modules/bcmdhd.ko

on boot && property:ro.vendor.ota_update_verifier=true
    exec_start update_verifier_nonencrypted

    # ------------------------------------------------------
    # TO-DO : When devfreq and cpufreq activated in kernel,
    #         need change below parameters
    # ------------------------------------------------------
    # # from init.power.sh
    # # bring back main cores CPU 0,2
    # #write /sys/devices/system/cpu/cpu0/online 1
    # write /sys/devices/system/cpu/cpu2/online 1

    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 400000

    # # EAS: Capping the max frequency of silver core to 800MHz
    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 800000

    # write /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq 400000

    # # if EAS is present, switch to sched governor (no effect if not EAS)
    # write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "sched"
    # write /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor "sched"

    # # Setting b.L scheduler parameters
    # write /proc/sys/kernel/sched_migration_fixup 1
    # write /proc/sys/kernel/sched_upmigrate 95
    # write /proc/sys/kernel/sched_downmigrate 90
    # write /proc/sys/kernel/sched_freq_inc_notify 400000
    # write /proc/sys/kernel/sched_freq_dec_notify 400000
    # write /proc/sys/kernel/sched_spill_nr_run 3
    # write /proc/sys/kernel/sched_init_task_load 100

    # # Exec init.foreground.sh in background
    # start vendor.foreground_sh
    # # add a cpuset for the camera daemon
    # # we want all cores for camera
    # mkdir /dev/cpuset/camera-daemon
    # write /dev/cpuset/camera-daemon/cpus 0-3
    # write /dev/cpuset/camera-daemon/mems 0
    # chown system system /dev/cpuset/camera-daemon
    # chown system system /dev/cpuset/camera-daemon/tasks
    # chmod 0664 /dev/cpuset/camera-daemon/tasks

    # Wifi init
    setprop wifi.interface wlan0

    # Wifi bcmdhd firmware reload path
    chown wifi wifi /sys/module/bcmdhd/parameters/firmware_path

    # Bluetooth init
    setprop ro.boot.btmacaddr "00:00:00:00:00:00"

on property:sys.boot_completed=1
    # Bluetooth
    chown bluetooth net_bt /sys/class/rfkill/rfkill0/type
    chown bluetooth net_bt /sys/class/rfkill/rfkill0/state
    chmod 0660 /sys/class/rfkill/rfkill0/state

    chown bluetooth net_bt /dev/ttyAMA1
    chmod 0660 /dev/ttyAMA1

service wpa_supplicant /vendor/bin/hw/wpa_supplicant \
    -O/data/vendor/wifi/wpa/sockets -puse_p2p_group_interface=1 -dd \
    -g@android:wpa_wlan0
#   we will start as root and wpa_supplicant will switch to user wifi
#   after setting up the capabilities required for WEXT
#   user wifi
#   group wifi inet keystore
    interface android.hardware.wifi.supplicant@1.0::ISupplicant default
    interface android.hardware.wifi.supplicant@1.1::ISupplicant default
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot
